window.ACE_FLASHCARDS_DATA = [
  {
    topic: 'Cú pháp',
    text: 'Hàm main() có vai trò gì?',
    options: [
      'Điểm bắt đầu chương trình',
      'Kết thúc chương trình',
      'Khai báo biến',
      'In ra màn hình',
    ],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'Ký tự nào kết thúc câu lệnh C++?',
    options: [',', '.', ';', ':'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Comment một dòng trong C++ dùng?',
    options: ['/* */', '//', '#', '--'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Comment nhiều dòng trong C++ dùng?',
    options: ['//', '/* */', '', '# #'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Từ khóa nào khai báo hằng số?',
    options: ['var', 'const', 'final', 'static'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Tên biến C++ có thể bắt đầu bằng?',
    options: ['Số', 'Chữ cái hoặc _', 'Ký tự đặc biệt', 'Khoảng trắng'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: '#include có tác dụng gì?',
    options: ['Khai báo hàm', 'Chèn nội dung file khác', 'Tạo biến', 'Kết thúc chương trình'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'namespace std có tác dụng gì?',
    options: [
      'Tạo biến',
      'Sử dụng cout/cin mà không cần std::',
      'Kết thúc chương trình',
      'Khai báo mảng',
    ],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Kiểu dữ liệu nào lưu số nguyên?',
    options: ['float', 'int', 'char', 'string'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Kiểu dữ liệu nào lưu số thực?',
    options: ['int', 'char', 'float', 'bool'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Kiểu dữ liệu nào lưu ký tự?',
    options: ['int', 'float', 'char', 'string'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Kiểu dữ liệu bool có thể nhận giá trị nào?',
    options: ['0 và 1', 'true và false', 'Cả hai', 'Chỉ số nguyên'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Kích thước int thường là bao nhiêu byte?',
    options: ['2', '4', '8', '1'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Kích thước char là bao nhiêu byte?',
    options: ['1', '2', '4', '8'],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'Giá trị mặc định của biến int chưa khởi tạo?',
    options: ['0', '1', 'Giá trị rác', '-1'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Cách khai báo biến đúng?',
    options: ['int x;', 'x int;', 'integer x;', 'var x;'],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'Cách khởi tạo biến đúng?',
    options: ['int x = 5;', 'int x := 5;', 'x = 5 int;', '5 = int x;'],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'Ký tự escape \\n có nghĩa gì?',
    options: ['Tab', 'Xuống dòng', 'Khoảng trắng', 'Backslash'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Ký tự escape \\t có nghĩa gì?',
    options: ['Tab', 'Xuống dòng', 'Null', 'Backslash'],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'Từ khóa nào thoát khỏi chương trình?',
    options: ['exit', 'return', 'break', 'continue'],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'Thứ tự ưu tiên toán tử * và + như thế nào?',
    options: ['+ cao hơn *', '* cao hơn +', 'Bằng nhau', 'Tùy thuộc vào context'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Biến toàn cục được khai báo ở đâu?',
    options: ['Trong hàm main', 'Ngoài tất cả hàm', 'Trong header file', 'Không thể khai báo'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Biến cục bộ có phạm vi như thế nào?',
    options: ['Toàn chương trình', 'Chỉ trong hàm', 'Chỉ trong file', 'Không có phạm vi'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Từ khóa nào định nghĩa hằng số?',
    options: ['#define', 'const', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Cách viết hằng số đúng?',
    options: ['const int MAX = 100;', 'int const = 100;', 'MAX const int = 100;', 'Tất cả đều sai'],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'Compiler C++ phổ biến là gì?',
    options: ['gcc/g++', 'javac', 'python', 'node'],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'File C++ có đuôi gì?',
    options: ['.c', '.cpp', '.java', '.py'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Lệnh biên dịch C++ cơ bản?',
    options: ['g++ file.cpp', 'javac file.cpp', 'python file.cpp', 'node file.cpp'],
    answer: 0,
  },
  {
    topic: 'Cú pháp',
    text: 'Header file C++ có đuôi gì?',
    options: ['.h', '.hpp', '.hxx', 'Tất cả đều đúng'],
    answer: 3,
  },
  {
    topic: 'Cú pháp',
    text: 'Preprocessor directive bắt đầu bằng?',
    options: ['@', '#', '$', '%'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Từ khóa auto trong C++11 có tác dụng gì?',
    options: [
      'Tự động gán giá trị',
      'Tự động suy luận kiểu',
      'Tự động xóa biến',
      'Không có tác dụng',
    ],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'nullptr trong C++11 thay thế cho gì?',
    options: ['0', 'NULL', 'false', 'Cả A và B'],
    answer: 3,
  },
  {
    topic: 'Cú pháp',
    text: 'Range-based for loop có từ C++ phiên bản nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Từ khóa decltype có tác dụng gì?',
    options: ['Khai báo kiểu', 'Lấy kiểu của biểu thức', 'Xóa kiểu', 'Chuyển đổi kiểu'],
    answer: 1,
  },
  {
    topic: 'Cú pháp',
    text: 'Uniform initialization {} có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Lambda expression có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Move semantics có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Smart pointer có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'Constexpr có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Cú pháp',
    text: 'std::string có trong header nào?',
    options: ['<iostream>', '<string>', '<cstring>', '<algorithm>'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'Toán tử xuất ra cout là gì?',
    options: ['>>', '<<', '<>', '><'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'Toán tử nhập từ cin là gì?',
    options: ['>>', '<<', '<>', '><'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'Header file cho cin/cout là gì?',
    options: ['<stdio.h>', '<iostream>', '<conio.h>', '<string>'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'Cách xuất số nguyên x ra màn hình?',
    options: ['cout << x;', 'printf(x);', 'print x;', 'console.log(x);'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'Cách nhập số nguyên x từ bàn phím?',
    options: ['cin >> x;', 'scanf(x);', 'input x;', 'read x;'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'endl có tác dụng gì?',
    options: ['Xuống dòng', 'Tab', 'Khoảng trắng', 'Kết thúc'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: '\\n và endl khác nhau như thế nào?',
    options: ['Không khác', 'endl flush buffer', '\\n nhanh hơn', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'I/O',
    text: 'Xuất nhiều giá trị cùng lúc như thế nào?',
    options: ['cout << a << b;', 'cout >> a >> b;', 'print a, b;', 'printf(a, b);'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'Nhập nhiều giá trị cùng lúc như thế nào?',
    options: ['cin >> a >> b;', 'cin << a << b;', 'scanf(a, b);', 'input a, b;'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'Đọc chuỗi có khoảng trắng dùng gì?',
    options: ['cin >>', 'getline()', 'cin.get()', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'I/O',
    text: 'cin.get() có tác dụng gì?',
    options: ['Đọc một ký tự', 'Đọc một dòng', 'Đọc một số', 'Xóa buffer'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'cin.ignore() có tác dụng gì?',
    options: ['Bỏ qua ký tự', 'Đọc ký tự', 'Xóa màn hình', 'Kết thúc nhập'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'getline(cin, s) đọc vào đâu?',
    options: ['char array', 'string', 'int', 'float'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'Làm thế nào xóa buffer sau cin?',
    options: ['cin.clear()', 'cin.ignore()', 'fflush()', 'cin.flush()'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'cout << fixed có tác dụng gì?',
    options: ['In số nguyên', 'In số thập phân cố định', 'In chuỗi', 'In ký tự'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'cout << setprecision(2) làm gì?',
    options: [
      'Set 2 chữ số thập phân',
      'Set 2 chữ số nguyên',
      'Set độ rộng 2',
      'Không có tác dụng',
    ],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'Header file cho setprecision là gì?',
    options: ['<iostream>', '<iomanip>', '<cmath>', '<string>'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'cout << setw(5) có tác dụng gì?',
    options: ['Set độ rộng 5', 'Set 5 chữ số', 'Set 5 dòng', 'Không có tác dụng'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'cout << left có tác dụng gì?',
    options: ['Canh trái', 'Canh phải', 'Canh giữa', 'Không có tác dụng'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'cout << right có tác dụng gì?',
    options: ['Canh trái', 'Canh phải', 'Canh giữa', 'Không có tác dụng'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'Đọc file trong C++ dùng gì?',
    options: ['ifstream', 'ofstream', 'fstream', 'Tất cả đều đúng'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'Ghi file trong C++ dùng gì?',
    options: ['ifstream', 'ofstream', 'fstream', 'iostream'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'Header file cho file I/O là gì?',
    options: ['<iostream>', '<fstream>', '<stdio.h>', '<conio.h>'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'Kiểm tra file mở thành công như thế nào?',
    options: ['file.is_open()', 'file.good()', 'file.fail()', 'Tất cả đều đúng'],
    answer: 3,
  },
  {
    topic: 'I/O',
    text: 'Đóng file như thế nào?',
    options: ['file.close()', 'fclose(file)', 'close(file)', 'file.end()'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'std::cin.fail() trả về gì?',
    options: ['true nếu lỗi nhập', 'false nếu lỗi', 'Số lỗi', 'Không có'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'Xóa trạng thái lỗi cin như thế nào?',
    options: ['cin.clear()', 'cin.reset()', 'cin.flush()', 'cin.good()'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'Printf trong C++ cần header gì?',
    options: ['<iostream>', '<cstdio>', '<stdio.h>', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'I/O',
    text: 'Scanf trong C++ cần header gì?',
    options: ['<iostream>', '<cstdio>', '<stdio.h>', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'I/O',
    text: 'cout << hex có tác dụng gì?',
    options: ['In hệ 16', 'In hệ 8', 'In hệ 2', 'In hệ 10'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'cout << oct có tác dụng gì?',
    options: ['In hệ 16', 'In hệ 8', 'In hệ 2', 'In hệ 10'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'cout << dec có tác dụng gì?',
    options: ['In hệ 16', 'In hệ 8', 'In hệ 2', 'In hệ 10'],
    answer: 3,
  },
  {
    topic: 'I/O',
    text: 'cout << boolalpha có tác dụng gì?',
    options: ['In true/false', 'In 1/0', 'In yes/no', 'Không có'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'stringstream có trong header nào?',
    options: ['<iostream>', '<sstream>', '<string>', '<algorithm>'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'ostringstream dùng để làm gì?',
    options: ['Đọc chuỗi', 'Ghi vào chuỗi', 'Xóa chuỗi', 'So sánh chuỗi'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'istringstream dùng để làm gì?',
    options: ['Đọc từ chuỗi', 'Ghi vào chuỗi', 'Xóa chuỗi', 'So sánh chuỗi'],
    answer: 0,
  },
  {
    topic: 'I/O',
    text: 'cin >> x khi x là string sẽ?',
    options: ['Đọc cả dòng', 'Đọc đến khoảng trắng', 'Đọc 1 ký tự', 'Báo lỗi'],
    answer: 1,
  },
  {
    topic: 'I/O',
    text: 'Cách nào tốt nhất để flush cout?',
    options: ['cout.flush()', 'cout << flush', 'endl', 'Tất cả đều đúng'],
    answer: 3,
  },
  {
    topic: 'I/O',
    text: 'cerr và cout khác nhau như thế nào?',
    options: ['cerr cho lỗi', 'cerr không buffer', 'cerr ra stderr', 'Tất cả đều đúng'],
    answer: 3,
  },
  {
    topic: 'I/O',
    text: 'clog trong C++ là gì?',
    options: ['Buffered error output', 'Console log', 'C log', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử số học cơ bản gồm?',
    options: ['+ - * /', '+ - * / %', 'chỉ + -', '+ - * / ^ %'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử % có tác dụng gì?',
    options: ['Chia', 'Chia lấy dư', 'Phần trăm', 'Lũy thừa'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: '5 % 3 bằng bao nhiêu?',
    options: ['1', '2', '0', '1.67'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử ++ có tác dụng gì?',
    options: ['Cộng 2', 'Tăng 1', 'Nhân 2', 'Không có'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: '++x và x++ khác nhau như thế nào?',
    options: ['Không khác', '++x tăng trước', 'x++ tăng sau', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử so sánh bằng là gì?',
    options: ['=', '==', '===', 'eq'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử gán là gì?',
    options: ['=', '==', ':=', '->'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử != có nghĩa gì?',
    options: ['Bằng', 'Không bằng', 'Lớn hơn', 'Nhỏ hơn'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử && là gì?',
    options: ['Logic AND', 'Logic OR', 'Bitwise AND', 'Gán'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử || là gì?',
    options: ['Logic AND', 'Logic OR', 'Bitwise OR', 'Gán'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'true && false bằng gì?',
    options: ['true', 'false', '1', '0'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'true || false bằng gì?',
    options: ['true', 'false', '1', '0'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử & là gì?',
    options: ['Logic AND', 'Bitwise AND', 'Address', 'Cả B và C'],
    answer: 3,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử << là gì?',
    options: ['Shift left', 'Stream output', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử >> là gì?',
    options: ['Shift right', 'Stream input', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử += có tác dụng gì?',
    options: ['x = x + y', 'x += y', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Toán tử',
    text: 'x *= 3 tương đương với gì?',
    options: ['x = x * 3', 'x = 3 * x', 'Cả hai', 'x = x + 3'],
    answer: 2,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử ?: là gì?',
    options: ['Conditional operator', 'Ternary operator', 'Cả hai', 'Không tồn tại'],
    answer: 2,
  },
  {
    topic: 'Toán tử',
    text: '(x > 0) ? 1 : -1 có nghĩa gì?',
    options: ['Nếu x > 0 thì 1, ngược lại -1', 'x > 0 và 1', 'x > 0 hoặc -1', 'Lỗi cú pháp'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử sizeof trả về gì?',
    options: ['Kích thước tính bằng byte', 'Kích thước tính bằng bit', 'Địa chỉ', 'Giá trị'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Độ ưu tiên của * và + như thế nào?',
    options: ['* cao hơn +', '+ cao hơn *', 'Bằng nhau', 'Tùy context'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Độ ưu tiên của && và || như thế nào?',
    options: ['&& cao hơn ||', '|| cao hơn &&', 'Bằng nhau', 'Tùy context'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Thứ tự kết hợp của = như thế nào?',
    options: ['Trái sang phải', 'Phải sang trái', 'Không có', 'Tùy context'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'a = b = c = 5 sẽ làm gì?',
    options: ['Lỗi', 'a, b, c đều = 5', 'Chỉ c = 5', 'Chỉ a = 5'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử nào có độ ưu tiên cao nhất?',
    options: ['()', '*', '+', '='],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Short-circuit evaluation áp dụng với?',
    options: ['&&', '||', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Toán tử',
    text: 'false && (x++) sẽ làm gì với x?',
    options: ['x tăng 1', 'x không đổi', 'x = 0', 'Lỗi'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'true || (x++) sẽ làm gì với x?',
    options: ['x tăng 1', 'x không đổi', 'x = 0', 'Lỗi'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'Ép kiểu (cast) trong C++ như thế nào?',
    options: ['(int)x', 'int(x)', 'static_cast<int>(x)', 'Tất cả đều đúng'],
    answer: 3,
  },
  {
    topic: 'Toán tử',
    text: 'dynamic_cast dùng cho gì?',
    options: ['Ép kiểu cơ bản', 'Ép kiểu đa hình', 'Ép kiểu const', 'Ép kiểu pointer'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'const_cast dùng để làm gì?',
    options: ['Ép kiểu const', 'Loại bỏ const', 'Thêm const', 'B và C'],
    answer: 3,
  },
  {
    topic: 'Toán tử',
    text: 'reinterpret_cast dùng cho gì?',
    options: ['Ép kiểu an toàn', 'Ép kiểu không an toàn', 'Ép kiểu tự động', 'Không dùng'],
    answer: 1,
  },
  {
    topic: 'Toán tử',
    text: 'Operator overloading là gì?',
    options: ['Nạp chồng toán tử', 'Thay đổi toán tử', 'Tạo toán tử mới', 'Xóa toán tử'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Comma operator có tác dụng gì?',
    options: ['Ngăn cách', 'Thực hiện tuần tự', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử . và -> khác nhau ntn?',
    options: [
      '. cho object, -> cho pointer',
      '. cho pointer, -> cho object',
      'Không khác',
      'Chỉ khác cú pháp',
    ],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử [] dùng cho gì?',
    options: ['Array subscript', 'Function call', 'Member access', 'Cast'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử () có mấy ý nghĩa?',
    options: ['1', '2', '3', 'Nhiều'],
    answer: 3,
  },
  {
    topic: 'Toán tử',
    text: 'Scope resolution operator là gì?',
    options: ['::', '->', '.', '::*'],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'Member pointer operator là gì?',
    options: ['.*', '->*', 'Cả hai', '::'],
    answer: 2,
  },
  {
    topic: 'Toán tử',
    text: 'Toán tử mới trong C++20?',
    options: ['<=>', '<=', '>=', '=='],
    answer: 0,
  },
  {
    topic: 'Toán tử',
    text: 'spaceship operator <=> trả về gì?',
    options: ['int', 'bool', 'ordering', 'void'],
    answer: 2,
  },
  {
    topic: 'Điều kiện',
    text: 'Cấu trúc if cơ bản có dạng nào?',
    options: ['if (condition)', 'if condition', 'if [condition]', 'if {condition}'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'else luôn đi kèm với gì?',
    options: ['if', 'while', 'for', 'switch'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'else if dùng khi nào?',
    options: ['Nhiều điều kiện', 'Chỉ 2 điều kiện', 'Vòng lặp', 'Switch case'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'switch case dùng với kiểu dữ liệu nào?',
    options: ['int/char', 'float', 'string', 'array'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'break trong switch có tác dụng gì?',
    options: ['Thoát switch', 'Tiếp tục case tiếp', 'Lặp lại', 'Không có'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'default trong switch dùng khi nào?',
    options: ['Không case nào match', 'Case đầu tiên', 'Case cuối', 'Mọi case'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Vòng lặp for có cấu trúc như thế nào?',
    options: [
      'for(init; condition; update)',
      'for(condition)',
      'for(init; update)',
      'for(condition; update)',
    ],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Vòng lặp while kiểm tra điều kiện khi nào?',
    options: ['Trước mỗi lần lặp', 'Sau mỗi lần lặp', 'Chỉ lần đầu', 'Chỉ lần cuối'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Vòng lặp do-while khác while ở điểm nào?',
    options: ['Kiểm tra điều kiện sau', 'Không có khác biệt', 'Chạy nhanh hơn', 'Cú pháp khác'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Vòng lặp nào chạy ít nhất 1 lần?',
    options: ['for', 'while', 'do-while', 'Tất cả'],
    answer: 2,
  },
  {
    topic: 'Điều kiện',
    text: 'break trong vòng lặp có tác dụng gì?',
    options: ['Thoát vòng lặp', 'Bỏ qua lần lặp', 'Tiếp tục lặp', 'Không có'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'continue trong vòng lặp có tác dụng gì?',
    options: ['Thoát vòng lặp', 'Bỏ qua lần lặp hiện tại', 'Lặp lại', 'Không có'],
    answer: 1,
  },
  {
    topic: 'Điều kiện',
    text: 'for(;;) có nghĩa gì?',
    options: ['Vòng lặp vô hạn', 'Vòng lặp 0 lần', 'Lỗi cú pháp', 'Không có nghĩa'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'while(true) có nghĩa gì?',
    options: ['Vòng lặp vô hạn', 'Vòng lặp 1 lần', 'Lỗi cú pháp', 'Không chạy'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Nested loop là gì?',
    options: ['Vòng lặp lồng nhau', 'Hai vòng lặp riêng', 'Vòng lặp sai', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'for(int i=0; i<5; i++) chạy mấy lần?',
    options: ['4', '5', '6', 'Vô hạn'],
    answer: 1,
  },
  {
    topic: 'Điều kiện',
    text: 'for(int i=1; i<=5; i++) chạy mấy lần?',
    options: ['4', '5', '6', 'Vô hạn'],
    answer: 1,
  },
  {
    topic: 'Điều kiện',
    text: 'for(int i=5; i>0; i--) chạy mấy lần?',
    options: ['4', '5', '6', '0'],
    answer: 1,
  },
  {
    topic: 'Điều kiện',
    text: 'Lỗi off-by-one thường xảy ra khi nào?',
    options: ['Điều kiện dừng sai', 'Khởi tạo sai', 'Update sai', 'Tất cả'],
    answer: 3,
  },
  {
    topic: 'Điều kiện',
    text: 'goto trong C++ có nên dùng không?',
    options: ['Nên', 'Không nên', 'Tùy trường hợp', 'Không tồn tại'],
    answer: 1,
  },
  {
    topic: 'Điều kiện',
    text: 'Label cho goto viết như thế nào?',
    options: ['label:', ':label', 'goto label', 'label;'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Range-based for loop có cú pháp nào?',
    options: [
      'for(auto x : container)',
      'for(x in container)',
      'for x in container',
      'for(x of container)',
    ],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Range-based for loop có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Điều kiện',
    text: 'if constexpr có từ C++ nào?',
    options: ['C++11', 'C++14', 'C++17', 'C++20'],
    answer: 2,
  },
  {
    topic: 'Điều kiện',
    text: 'switch với string có được không?',
    options: ['C++98: không', 'C++11: có', 'Không bao giờ', 'A đúng'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Fallthrough trong switch là gì?',
    options: ['Không có break', 'Có break', 'Default case', 'Lỗi'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: '[[fallthrough]] attribute có tác dụng gì?',
    options: ['Chỉ định fallthrough cố ý', 'Ngăn fallthrough', 'Báo lỗi', 'Không có'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Điều kiện trong if phải có kiểu gì?',
    options: ['bool', 'int', 'Convertible to bool', 'C đúng'],
    answer: 3,
  },
  {
    topic: 'Điều kiện',
    text: 'if(0) sẽ thực hiện không?',
    options: ['Có', 'Không', 'Lỗi', 'Tùy compiler'],
    answer: 1,
  },
  {
    topic: 'Điều kiện',
    text: 'if(1) sẽ thực hiện không?',
    options: ['Có', 'Không', 'Lỗi', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Comma operator trong for loop hoạt động ntn?',
    options: ['Thực hiện tuần tự', 'Chỉ lấy giá trị cuối', 'Cả hai', 'Lỗi'],
    answer: 2,
  },
  {
    topic: 'Điều kiện',
    text: 'for(int i=0, j=5; i<j; i++, j--) hợp lệ?',
    options: ['Có', 'Không', 'Lỗi cú pháp', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'break trong vòng lặp lồng thoát mấy cấp?',
    options: ['1 cấp', 'Tất cả', '2 cấp', 'Tùy context'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'continue trong vòng lặp lồng ảnh hưởng cấp nào?',
    options: ['Cấp hiện tại', 'Tất cả cấp', 'Cấp ngoài', 'Cấp trong'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Infinite loop có thể thoát bằng gì?',
    options: ['break', 'return', 'exit()', 'Tất cả'],
    answer: 3,
  },
  {
    topic: 'Điều kiện',
    text: 'while(cin >> x) có nghĩa gì?',
    options: ['Đọc đến EOF', 'Đọc 1 lần', 'Đọc vô hạn', 'Lỗi'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Loop unrolling là kỹ thuật gì?',
    options: ['Tối ưu hóa vòng lặp', 'Tạo vòng lặp', 'Xóa vòng lặp', 'Debug vòng lặp'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'Condition variable trong if có thể là gì?',
    options: ['Expression', 'Function call', 'Assignment', 'Tất cả'],
    answer: 3,
  },
  {
    topic: 'Điều kiện',
    text: 'Short-circuit evaluation áp dụng với if không?',
    options: ['Có', 'Không', 'Tùy trường hợp', 'Không biết'],
    answer: 0,
  },
  {
    topic: 'Điều kiện',
    text: 'if(a && b) khi a false thì b có được kiểm tra?',
    options: ['Có', 'Không', 'Tùy compiler', 'Lỗi'],
    answer: 1,
  },
  {
    topic: 'Điều kiện',
    text: 'structured binding có từ C++ nào?',
    options: ['C++11', 'C++14', 'C++17', 'C++20'],
    answer: 2,
  },
  {
    topic: 'Hàm',
    text: 'Tham chiếu trong C++ ký hiệu bằng?',
    options: ['*', '&', '->', '%'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Khai báo hàm trả về int đúng?',
    options: ['int f();', 'f(): int', 'func int()', 'int: f()'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Hàm main() trả về kiểu gì?',
    options: ['void', 'int', 'char', 'bool'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Truyền theo giá trị nghĩa là?',
    options: ['Hàm nhận bản sao', 'Hàm nhận tham chiếu', 'Hàm nhận con trỏ', 'Không truyền'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Truyền theo tham chiếu nghĩa là?',
    options: [
      'Hàm nhận bản sao',
      'Hàm có thể thay đổi biến gốc',
      'Hàm chạy nhanh hơn',
      'Hàm không cần tham số',
    ],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Từ khóa void có nghĩa là?',
    options: ['Hàm trả về số nguyên', 'Hàm không trả về gì', 'Hàm có tham số', 'Hàm riêng tư'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Hàm có thể có bao nhiêu return?',
    options: ['Chỉ 1', 'Tối đa 2', 'Không giới hạn', 'Không có return'],
    answer: 2,
  },
  {
    topic: 'Hàm',
    text: 'Biến cục bộ được khai báo ở đâu?',
    options: ['Ngoài tất cả hàm', 'Bên trong hàm', 'Trong file header', 'Trước main()'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Biến toàn cục được khai báo ở đâu?',
    options: ['Trong hàm', 'Ngoài tất cả hàm', 'Trong main()', 'Không tồn tại'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Phạm vi biến cục bộ là?',
    options: ['Toàn chương trình', 'Chỉ trong hàm khai báo', 'Chỉ trong file', 'Trong tất cả file'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Từ khóa để trả về giá trị từ hàm?',
    options: ['exit', 'return', 'end', 'finish'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Hàm có thể gọi hàm khác không?',
    options: ['Không thể', 'Có thể', 'Chỉ trong main()', 'Chỉ hàm void'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Tham số mặc định được viết ở đâu?',
    options: ['Khai báo hàm', 'Định nghĩa hàm', 'Cả hai', 'Không có'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Overloading hàm có nghĩa là?',
    options: ['Hàm quá tải', 'Hàm có cùng tên khác tham số', 'Hàm lồng nhau', 'Hàm đệ quy'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Prototype hàm có tác dụng gì?',
    options: ['Khai báo hàm trước khi định nghĩa', 'Gọi hàm', 'Xóa hàm', 'Sao chép hàm'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Hàm inline có đặc điểm gì?',
    options: ['Chạy chậm', 'Mã được chèn trực tiếp', 'Không có tham số', 'Luôn đệ quy'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Recursive function là gì?',
    options: [
      'Hàm gọi hàm khác',
      'Hàm gọi chính nó',
      'Hàm có nhiều tham số',
      'Hàm không có return',
    ],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Function pointer là gì?',
    options: ['Con trỏ đến hàm', 'Con trỏ trong hàm', 'Hàm trả về con trỏ', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Lambda function có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Hàm',
    text: 'std::function dùng để làm gì?',
    options: ['Lưu trữ hàm', 'Gọi hàm', 'Xóa hàm', 'Sao chép hàm'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Function template là gì?',
    options: ['Hàm có kiểu cố định', 'Hàm có kiểu tổng quát', 'Hàm không có kiểu', 'Hàm đặc biệt'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'const function có nghĩa gì?',
    options: ['Hàm không thay đổi object', 'Hàm không có tham số', 'Hàm không trả về', 'Hàm hằng'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Virtual function là gì?',
    options: ['Hàm ảo', 'Hàm thực', 'Hàm tĩnh', 'Hàm inline'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Pure virtual function là gì?',
    options: ['Hàm ảo thuần túy', 'Hàm thực', 'Hàm tĩnh', 'Hàm inline'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Abstract class có đặc điểm gì?',
    options: [
      'Có ít nhất 1 pure virtual',
      'Không có hàm nào',
      'Chỉ có hàm tĩnh',
      'Chỉ có constructor',
    ],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Friend function là gì?',
    options: ['Hàm bạn', 'Hàm riêng tư', 'Hàm công khai', 'Hàm bảo vệ'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Static function có đặc điểm gì?',
    options: ['Thuộc về class', 'Thuộc về object', 'Không thuộc về ai', 'Thuộc về namespace'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Constructor có thể có tham số không?',
    options: ['Không', 'Có', 'Chỉ 1 tham số', 'Chỉ 2 tham số'],
    answer: 1,
  },
  {
    topic: 'Hàm',
    text: 'Destructor có thể có tham số không?',
    options: ['Không', 'Có', 'Chỉ 1 tham số', 'Chỉ 2 tham số'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Copy constructor dùng để làm gì?',
    options: ['Sao chép object', 'Tạo object mới', 'Xóa object', 'Di chuyển object'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Move constructor có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Hàm',
    text: 'Operator overloading là gì?',
    options: ['Nạp chồng toán tử', 'Thay đổi toán tử', 'Tạo toán tử mới', 'Xóa toán tử'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Function object (functor) là gì?',
    options: [
      'Object có thể gọi như hàm',
      'Hàm có object',
      'Object trong hàm',
      'Hàm trả về object',
    ],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'std::bind dùng để làm gì?',
    options: ['Ràng buộc tham số', 'Gọi hàm', 'Xóa hàm', 'Sao chép hàm'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'std::placeholders dùng với gì?',
    options: ['std::bind', 'std::function', 'std::thread', 'Tất cả'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Function try-catch là gì?',
    options: ['Try-catch trong hàm', 'Hàm trong try-catch', 'Hàm try-catch', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Exception specification có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++17'],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'noexcept có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Hàm',
    text: 'Function-local static có đặc điểm gì?',
    options: [
      'Chỉ khởi tạo 1 lần',
      'Khởi tạo mỗi lần gọi',
      'Không khởi tạo',
      'Khởi tạo ngẫu nhiên',
    ],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'Function template specialization là gì?',
    options: [
      'Chuyên biệt hóa template',
      'Tổng quát hóa template',
      'Xóa template',
      'Sao chép template',
    ],
    answer: 0,
  },
  {
    topic: 'Hàm',
    text: 'SFINAE là gì?',
    options: [
      'Substitution Failure Is Not An Error',
      'Special Function In Array',
      'Static Function In Namespace',
      'Simple Function In Class',
    ],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Điều gì cần có trong hàm đệ quy?',
    options: ['goto', 'biến toàn cục', 'điều kiện dừng', 'mảng tĩnh'],
    answer: 2,
  },
  {
    topic: 'Đệ quy',
    text: 'fact(3) với fact(n) = n*fact(n-1), fact(1)=1 là?',
    options: ['3', '5', '6', '9'],
    answer: 2,
  },
  {
    topic: 'Đệ quy',
    text: 'Đệ quy là gì?',
    options: [
      'Hàm gọi hàm khác',
      'Hàm gọi chính nó',
      'Hàm có nhiều tham số',
      'Hàm không có return',
    ],
    answer: 1,
  },
  {
    topic: 'Đệ quy',
    text: 'Điều kiện dừng trong đệ quy có tác dụng gì?',
    options: ['Làm chương trình chậm', 'Ngăn lặp vô hạn', 'Tăng tốc độ', 'Không có tác dụng'],
    answer: 1,
  },
  {
    topic: 'Đệ quy',
    text: 'Fibonacci(0) = 0, Fibonacci(1) = 1, Fibonacci(2) = ?',
    options: ['0', '1', '2', '3'],
    answer: 1,
  },
  {
    topic: 'Đệ quy',
    text: 'Đệ quy có nhược điểm gì?',
    options: ['Khó hiểu', 'Tốn bộ nhớ stack', 'Chậm hơn vòng lặp', 'Tất cả đều đúng'],
    answer: 3,
  },
  {
    topic: 'Đệ quy',
    text: 'Base case trong đệ quy là gì?',
    options: [
      'Trường hợp cơ bản không đệ quy',
      'Trường hợp phức tạp nhất',
      'Trường hợp lỗi',
      'Không tồn tại',
    ],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Stack overflow xảy ra khi nào?',
    options: [
      'Đệ quy không có điều kiện dừng',
      'Đệ quy quá nhanh',
      'Đệ quy quá chậm',
      'Không bao giờ',
    ],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Tính giai thừa 0! = ?',
    options: ['0', '1', 'Không xác định', 'Lỗi'],
    answer: 1,
  },
  {
    topic: 'Đệ quy',
    text: 'Đệ quy tuyến tính là gì?',
    options: [
      'Hàm gọi chính nó 1 lần',
      'Hàm gọi chính nó 2 lần',
      'Hàm không đệ quy',
      'Hàm lặp vô hạn',
    ],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Bài toán kinh điển dùng đệ quy tính giai thừa?',
    options: ['factorial', 'fibonacci', 'power', 'gcd'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Đệ quy nhị phân là gì?',
    options: [
      'Hàm gọi chính nó 1 lần',
      'Hàm gọi chính nó 2 lần',
      'Hàm có 2 tham số',
      'Hàm trả về bool',
    ],
    answer: 1,
  },
  {
    topic: 'Đệ quy',
    text: 'Tháp Hà Nội là bài toán gì?',
    options: ['Vòng lặp', 'Đệ quy', 'Mảng', 'Con trỏ'],
    answer: 1,
  },
  {
    topic: 'Đệ quy',
    text: 'Đệ quy đuôi (tail recursion) là gì?',
    options: ['Đệ quy ở cuối hàm', 'Đệ quy ở đầu hàm', 'Đệ quy ở giữa', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Có thể thay thế đệ quy bằng gì?',
    options: ['Không thể thay thế', 'Vòng lặp + stack', 'Chỉ vòng lặp', 'Chỉ mảng'],
    answer: 1,
  },
  {
    topic: 'Đệ quy',
    text: 'Khi nào nên dùng đệ quy?',
    options: ['Luôn luôn', 'Không bao giờ', 'Khi bài toán có cấu trúc đệ quy', 'Khi muốn chậm'],
    answer: 2,
  },
  {
    topic: 'Đệ quy',
    text: 'Binary search có thể dùng đệ quy không?',
    options: ['Không', 'Có', 'Chỉ iterative', 'Tùy implementation'],
    answer: 1,
  },
  {
    topic: 'Đệ quy',
    text: 'Tree traversal thường dùng đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Merge sort có thể implement đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Quick sort có thể implement đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Depth-first search (DFS) thường dùng đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Backtracking thường dùng đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Dynamic programming có thể dùng đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Divide and conquer thường dùng đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Recursive case là gì?',
    options: ['Trường hợp đệ quy', 'Trường hợp cơ bản', 'Trường hợp lỗi', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Indirect recursion là gì?',
    options: ['A gọi B, B gọi A', 'A gọi A', 'A gọi C', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Mutual recursion là gì?',
    options: ['A gọi B, B gọi A', 'A gọi A', 'A gọi C', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Head recursion là gì?',
    options: ['Đệ quy ở đầu', 'Đệ quy ở cuối', 'Đệ quy ở giữa', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Tail recursion optimization là gì?',
    options: ['Tối ưu đệ quy đuôi', 'Tối ưu đệ quy đầu', 'Tối ưu đệ quy giữa', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Call stack trong đệ quy là gì?',
    options: ['Stack lưu các lời gọi', 'Stack lưu biến', 'Stack lưu hàm', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Recursion depth là gì?',
    options: ['Độ sâu đệ quy', 'Độ rộng đệ quy', 'Độ cao đệ quy', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Stack frame trong đệ quy là gì?',
    options: ['Frame của một lời gọi', 'Frame của biến', 'Frame của hàm', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Recursive data structure là gì?',
    options: ['Cấu trúc tự tham chiếu', 'Cấu trúc đơn giản', 'Cấu trúc phức tạp', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Tree là recursive data structure?',
    options: ['Có', 'Không', 'Tùy thuộc', 'Không biết'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Linked list có thể traverse đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Graph có thể traverse đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Memoization trong đệ quy là gì?',
    options: ['Lưu kết quả đã tính', 'Xóa kết quả', 'Tính lại kết quả', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Tabulation trong DP là gì?',
    options: ['Tính từ dưới lên', 'Tính từ trên xuống', 'Tính ngẫu nhiên', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Top-down DP thường dùng đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Đệ quy',
    text: 'Bottom-up DP thường dùng đệ quy?',
    options: ['Có', 'Không', 'Chỉ iterative', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Chỉ số phần tử đầu tiên của mảng?',
    options: ['0', '1', '-1', 'tùy'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Kích thước mảng int a[10] là?',
    options: ['9', '10', '11', 'phụ thuộc'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Khai báo mảng 5 phần tử đúng?',
    options: ['int a(5);', 'int a[5];', 'array<int> a(5);', 'int [5] a;'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Truy cập phần tử cuối của mảng a[n]?',
    options: ['a[n]', 'a[n-1]', 'a[n+1]', 'a.last()'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Khởi tạo mảng {1,2,3} đúng?',
    options: ['int a[] = {1,2,3};', 'int a = {1,2,3};', 'int a[3] = 1,2,3;', 'array a = {1,2,3};'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Duyệt mảng a[n] bằng vòng lặp nào?',
    options: ['for(i=1; i<=n; i++)', 'for(i=0; i<n; i++)', 'for(i=0; i<=n; i++)', 'while(true)'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Lỗi gì khi truy cập a[10] với mảng a[5]?',
    options: ['Compile error', 'Runtime error', 'Out of bounds', 'Tất cả đều đúng'],
    answer: 2,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể thay đổi kích thước không?',
    options: [
      'Có, bất kỳ lúc nào',
      'Không, kích thước cố định',
      'Chỉ khi khai báo',
      'Tùy thuộc kiểu dữ liệu',
    ],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Tìm phần tử lớn nhất mảng cần?',
    options: ['Duyệt 1 lần', 'Duyệt 2 lần', 'Sắp xếp trước', 'Không thể tìm'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Sắp xếp mảng bubble sort có độ phức tạp?',
    options: ['O(n)', 'O(n log n)', 'O(n²)', 'O(1)'],
    answer: 2,
  },
  {
    topic: 'Mảng 1D',
    text: 'Thuật toán tìm kiếm tuyến tính trong mảng?',
    options: ['linear search', 'binary search', 'hash search', 'tree search'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Binary search yêu cầu mảng?',
    options: ['Bất kỳ', 'Đã sắp xếp', 'Có số lẻ phần tử', 'Toàn số dương'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Chèn phần tử vào đầu mảng cần?',
    options: ['Dịch chuyển các phần tử', 'Không cần làm gì', 'Xóa phần tử cuối', 'Tạo mảng mới'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng được lưu trữ trong bộ nhớ như thế nào?',
    options: ['Ngẫu nhiên', 'Liên tiếp', 'Theo giá trị', 'Theo thứ tự abc'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Khởi tạo mảng không gán giá trị sẽ?',
    options: ['Toàn số 0', 'Giá trị rác', 'Lỗi compile', 'Toàn số 1'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Truyền mảng vào hàm C++ truyền?',
    options: ['Giá trị', 'Tham chiếu', 'Con trỏ đến phần tử đầu', 'Bản sao'],
    answer: 2,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng động được tạo bằng?',
    options: ['int a[n];', 'new int[n]', 'malloc(n)', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'Mảng 1D',
    text: 'Giải phóng mảng động dùng?',
    options: ['delete a', 'delete[] a', 'free(a)', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kiểu dữ liệu nào?',
    options: ['Chỉ primitive', 'Bất kỳ kiểu nào', 'Chỉ số', 'Chỉ ký tự'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng char và string khác nhau?',
    options: ['char[] cố định', 'string động', 'Cả hai', 'Không khác'],
    answer: 2,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể làm tham số hàm?',
    options: ['Không', 'Có', 'Chỉ mảng tĩnh', 'Chỉ mảng động'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể trả về từ hàm?',
    options: ['Không', 'Có', 'Chỉ mảng tĩnh', 'Chỉ mảng động'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể lồng nhau?',
    options: ['Không', 'Có', 'Chỉ 2 cấp', 'Tùy compiler'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước âm?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ debug'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước 0?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước biến?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước compile-time?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước runtime?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 1,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước constexpr?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước template?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước auto?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước decltype?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước sizeof?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước alignof?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước typeid?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước noexcept?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước static_cast?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước dynamic_cast?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước const_cast?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 1D',
    text: 'Mảng có thể có kích thước reinterpret_cast?',
    options: ['Có', 'Không', 'Tùy compiler', 'Chỉ C++11+'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Khai báo ma trận 2x3 đúng?',
    options: ['int a[2,3];', 'int a(2)(3);', 'int a[2][3];', 'matrix<int,2,3> a;'],
    answer: 2,
  },
  {
    topic: 'Mảng 2D',
    text: 'Truy cập phần tử hàng 1, cột 2 của ma trận a?',
    options: ['a[1,2]', 'a[1][2]', 'a(1,2)', 'a.get(1,2)'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Duyệt ma trận m×n cần mấy vòng lặp?',
    options: ['1', '2', '3', 'm+n'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận 3×4 có bao nhiêu phần tử?',
    options: ['7', '12', '16', '9'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Khởi tạo ma trận 2×2 đúng?',
    options: [
      'int a[2][2] = {{1,2},{3,4}};',
      'int a[2][2] = {1,2,3,4};',
      'Cả hai đều đúng',
      'Cả hai đều sai',
    ],
    answer: 2,
  },
  {
    topic: 'Mảng 2D',
    text: 'Tính tổng đường chéo chính ma trận vuông n×n?',
    options: [
      'for(i=0;i<n;i++) sum+=a[i][i]',
      'for(i=0;i<n;i++) sum+=a[i][n-i]',
      'for(i=0;i<n;i++) sum+=a[i][0]',
      'for(i=0;i<n;i++) sum+=a[0][i]',
    ],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận chuyển vị có kích thước nào từ ma trận 3×5?',
    options: ['3×5', '5×3', '3×3', '5×5'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Tìm phần tử lớn nhất ma trận m×n cần?',
    options: ['1 vòng lặp', '2 vòng lặp lồng nhau', '3 vòng lặp', 'Không thể'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ký tự ngăn cách khi khởi tạo ma trận?',
    options: [',', ';', ':', '|'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận đơn vị có đặc điểm gì?',
    options: ['Tất cả phần tử = 1', 'Đường chéo chính = 1, còn lại = 0', 'Đối xứng', 'Vuông'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Nhân hai ma trận A(m×n) và B(p×q) yêu cầu?',
    options: ['m=p', 'n=p', 'm=q', 'n=q'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận được lưu trong bộ nhớ theo thứ tự?',
    options: ['Ngẫu nhiên', 'Theo hàng', 'Theo cột', 'Tùy compiler'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Tính tổng từng hàng ma trận cần?',
    options: ['1 vòng for', '2 vòng for lồng nhau', '3 vòng for', 'while'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận tam giác trên có đặc điểm?',
    options: ['a[i][j]=0 khi i>j', 'a[i][j]=0 khi i<j', 'a[i][j]=0 khi i=j', 'Không có đặc điểm'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Truyền ma trận vào hàm C++ như thế nào?',
    options: ['Truyền giá trị', 'Truyền con trỏ', 'Truyền tham chiếu', 'Cả B và C'],
    answer: 3,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước động?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước biến?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 1,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước template?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước auto?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước decltype?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước sizeof?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước alignof?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước typeid?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước noexcept?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước static_cast?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước dynamic_cast?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước const_cast?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước reinterpret_cast?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước constexpr?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước constinit?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước consteval?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước const?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước volatile?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước mutable?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước static?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước extern?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước register?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước thread_local?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước inline?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước virtual?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước explicit?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước friend?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước override?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Mảng 2D',
    text: 'Ma trận có thể có kích thước final?',
    options: ['Không', 'Có', 'Chỉ compile-time', 'Tùy compiler'],
    answer: 0,
  },
  {
    topic: 'Chuỗi',
    text: 'Chuỗi C kết thúc bằng?',
    options: ['\\n', '\\0', 'EOF', 'space'],
    answer: 1,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm so sánh 2 chuỗi?',
    options: ['strcat', 'strcmp', 'strcpy', 'strlen'],
    answer: 1,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm đo độ dài chuỗi?',
    options: ['length()', 'strlen()', 'size()', 'count()'],
    answer: 1,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm sao chép chuỗi?',
    options: ['strcpy()', 'strcat()', 'strcmp()', 'strchr()'],
    answer: 0,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm nối chuỗi?',
    options: ['strcpy()', 'strcat()', 'strcmp()', 'strlen()'],
    answer: 1,
  },
  {
    topic: 'Chuỗi',
    text: 'Khai báo chuỗi "hello" đúng?',
    options: [
      'char s[5] = "hello";',
      'char s[6] = "hello";',
      'char s[] = "hello";',
      'B và C đều đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Chuỗi',
    text: 'strcmp("abc", "abc") trả về?',
    options: ['0', '1', '-1', '3'],
    answer: 0,
  },
  {
    topic: 'Chuỗi',
    text: 'strlen("hello") trả về?',
    options: ['4', '5', '6', 'Lỗi'],
    answer: 1,
  },
  {
    topic: 'Chuỗi',
    text: 'Ký tự kết thúc chuỗi C?',
    options: ['\\0', '\\n', 'EOF', 'space'],
    answer: 0,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm tìm ký tự trong chuỗi?',
    options: ['strchr()', 'strstr()', 'strcmp()', 'strcpy()'],
    answer: 0,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm tìm chuỗi con?',
    options: ['strchr()', 'strstr()', 'strcmp()', 'strcat()'],
    answer: 1,
  },
  {
    topic: 'Chuỗi',
    text: 'Chuỗi rỗng có độ dài?',
    options: ['0', '1', '-1', 'Không xác định'],
    answer: 0,
  },
  {
    topic: 'Chuỗi',
    text: 'char s[10] = "hi"; thì s[2] = ?',
    options: ["'i'", "'\\0'", 'Lỗi', 'Rác'],
    answer: 1,
  },
  {
    topic: 'Chuỗi',
    text: 'Đọc chuỗi có khoảng trắng dùng?',
    options: ['cin >>', 'getline()', 'scanf()', 'B và C đều đúng'],
    answer: 3,
  },
  {
    topic: 'Chuỗi',
    text: 'Buffer overflow xảy ra khi?',
    options: ['Chuỗi quá ngắn', 'Chuỗi vượt kích thước mảng', 'Chuỗi rỗng', 'Không bao giờ'],
    answer: 1,
  },
  {
    topic: 'Chuỗi',
    text: 'Chuyển chuỗi sang số dùng?',
    options: ['atoi()', 'stoi()', 'Cả hai', 'Không thể'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Chuyển số sang chuỗi dùng?',
    options: ['itoa()', 'to_string()', 'Cả hai', 'Không thể'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm chuyển chuỗi sang chữ hoa?',
    options: ['toupper()', 'strupr()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm chuyển chuỗi sang chữ thường?',
    options: ['tolower()', 'strlwr()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm đảo ngược chuỗi?',
    options: ['strrev()', 'reverse()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm cắt chuỗi?',
    options: ['strtok()', 'substr()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm thay thế chuỗi con?',
    options: ['strreplace()', 'replace()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra chuỗi có chứa ký tự?',
    options: ['strchr()', 'find()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra chuỗi có chứa chuỗi con?',
    options: ['strstr()', 'find()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm so sánh chuỗi không phân biệt hoa thường?',
    options: ['stricmp()', 'strcasecmp()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm sao chép n ký tự đầu?',
    options: ['strncpy()', 'substr()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm nối n ký tự đầu?',
    options: ['strncat()', 'append()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm so sánh n ký tự đầu?',
    options: ['strncmp()', 'compare()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm tìm ký tự cuối cùng?',
    options: ['strrchr()', 'rfind()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm tìm chuỗi con cuối cùng?',
    options: ['strrstr()', 'rfind()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải chữ cái?',
    options: ['isalpha()', 'isalnum()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải số?',
    options: ['isdigit()', 'isalnum()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải khoảng trắng?',
    options: ['isspace()', 'isblank()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải chữ cái hoặc số?',
    options: ['isalnum()', 'isalpha()', 'isdigit()', 'Tất cả'],
    answer: 0,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải chữ cái in hoa?',
    options: ['isupper()', 'islower()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải chữ cái in thường?',
    options: ['islower()', 'isupper()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải ký tự in được?',
    options: ['isprint()', 'isgraph()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải ký tự điều khiển?',
    options: ['iscntrl()', 'isprint()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải ký tự đặc biệt?',
    options: ['ispunct()', 'isalnum()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Chuỗi',
    text: 'Hàm kiểm tra ký tự có phải ký tự hex?',
    options: ['isxdigit()', 'isdigit()', 'Cả hai', 'Không có'],
    answer: 2,
  },
  {
    topic: 'Con trỏ',
    text: 'Toán tử lấy địa chỉ biến?',
    options: ['*', '&', '->', '%'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Giải phóng bộ nhớ cấp phát bằng new?',
    options: ['free', 'delete', 'dispose', 'release'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Toán tử truy cập giá trị qua con trỏ?',
    options: ['&', '*', '->', '[]'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Khai báo con trỏ int đúng?',
    options: ['int p*;', 'int *p;', '*int p;', 'pointer<int> p;'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ NULL trỏ đến đâu?',
    options: ['Địa chỉ 0', 'Không trỏ đến đâu', 'Vùng nhớ đặc biệt', 'A và B đúng'],
    answer: 3,
  },
  {
    topic: 'Con trỏ',
    text: 'Cấp phát mảng động 10 phần tử int?',
    options: ['new int[10]', 'malloc(10)', 'int[10] new', 'alloc int[10]'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Giải phóng mảng động dùng?',
    options: ['delete p', 'delete[] p', 'free(p)', 'B và C đúng'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ p trỏ đến int x, *p = 5 có nghĩa?',
    options: ['p = 5', 'x = 5', 'Địa chỉ x = 5', 'Lỗi'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Từ khóa cấp phát bộ nhớ động trong C++?',
    options: ['new', 'malloc', 'alloc', 'create'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ void* có thể?',
    options: ['Trỏ bất kỳ kiểu nào', 'Chỉ trỏ int', 'Chỉ trỏ char', 'Không tồn tại'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ hằng có đặc điểm?',
    options: [
      'Không thể thay đổi địa chỉ',
      'Không thể thay đổi giá trị',
      'Cả hai',
      'Không có đặc biệt',
    ],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Pointer arithmetic: p++ có nghĩa?',
    options: [
      'Tăng địa chỉ 1 byte',
      'Tăng địa chỉ 1 đơn vị kiểu dữ liệu',
      'Tăng giá trị tại p',
      'Lỗi',
    ],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ đến con trỏ khai báo như nào?',
    options: ['int *p;', 'int **p;', 'int ptr*p;', 'pointer int p;'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Memory leak xảy ra khi?',
    options: [
      'Dùng new nhưng không delete',
      'Dùng delete nhiều lần',
      'Dùng con trỏ NULL',
      'Không có memory leak',
    ],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Dangling pointer là gì?',
    options: ['Con trỏ NULL', 'Con trỏ trỏ vùng nhớ đã giải phóng', 'Con trỏ hằng', 'Con trỏ void'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ hàm dùng để?',
    options: ['Trỏ đến hàm', 'Tham số hàm', 'Callback', 'Tất cả đều đúng'],
    answer: 3,
  },
  {
    topic: 'Con trỏ',
    text: 'Smart pointer có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Con trỏ',
    text: 'unique_ptr có đặc điểm gì?',
    options: ['Chỉ có 1 owner', 'Có thể copy', 'Có thể share', 'Không có đặc biệt'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'shared_ptr có đặc điểm gì?',
    options: ['Chỉ có 1 owner', 'Có thể copy', 'Có thể share', 'Không có đặc biệt'],
    answer: 2,
  },
  {
    topic: 'Con trỏ',
    text: 'weak_ptr có đặc điểm gì?',
    options: ['Chỉ có 1 owner', 'Có thể copy', 'Có thể share', 'Không tăng reference count'],
    answer: 3,
  },
  {
    topic: 'Con trỏ',
    text: 'auto_ptr có từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'auto_ptr có deprecated từ C++ nào?',
    options: ['C++98', 'C++03', 'C++11', 'C++14'],
    answer: 2,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể so sánh bằng == không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể so sánh bằng < không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể so sánh bằng > không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể so sánh bằng <= không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể so sánh bằng >= không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể so sánh bằng != không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể cộng với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể trừ với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể cộng với con trỏ khác không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể trừ với con trỏ khác không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 1,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể nhân với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể chia với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể lấy modulo với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể lấy lũy thừa với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể lấy bitwise AND với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể lấy bitwise OR với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể lấy bitwise XOR với số nguyên không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể lấy bitwise NOT không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể lấy bitwise shift left không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Con trỏ',
    text: 'Con trỏ có thể lấy bitwise shift right không?',
    options: ['Không', 'Có', 'Chỉ con trỏ NULL', 'Tùy thuộc'],
    answer: 0,
  },
  {
    topic: 'Struct',
    text: 'Truy cập trường của struct dùng?',
    options: ['.', '->', '::', '#'],
    answer: 0,
  },
  {
    topic: 'Struct',
    text: 'Từ khóa khai báo struct?',
    options: ['class', 'struct', 'record', 'type'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể chứa?',
    options: ['Chỉ biến', 'Chỉ hàm', 'Cả biến và hàm', 'Chỉ số'],
    answer: 2,
  },
  {
    topic: 'Struct',
    text: 'Khai báo struct Student đúng?',
    options: [
      'struct Student { int id; };',
      'Student struct { int id; };',
      'struct { int id; } Student;',
      'A và C đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'Khởi tạo struct Point{int x,y;} đúng?',
    options: ['Point p = {1,2};', 'Point p(1,2);', 'Point p; p.x=1; p.y=2;', 'Tất cả đều đúng'],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'Con trỏ struct truy cập trường dùng?',
    options: ['.', '->', 'Cả hai', '::'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct trong C++ khác class ở điểm nào?',
    options: ['Không khác gì', 'struct public mặc định', 'class private mặc định', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'Truyền struct vào hàm có thể?',
    options: ['Theo giá trị', 'Theo tham chiếu', 'Theo con trỏ', 'Tất cả đều được'],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'Toán tử truy cập trường qua con trỏ struct?',
    options: ['->', '.', '::', '#'],
    answer: 0,
  },
  {
    topic: 'Struct',
    text: 'Mảng struct khai báo như nào?',
    options: ['Student arr[10];', 'struct Student arr[10];', 'Student[10] arr;', 'A và B đúng'],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'struct lồng nhau có được không?',
    options: ['Không', 'Có', 'Chỉ 1 cấp', 'Tùy compiler'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có constructor không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'So sánh 2 struct bằng == được không?',
    options: ['Được', 'Không được', 'Chỉ primitive type', 'Phải overload'],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'struct có thể kế thừa không?',
    options: ['Không', 'Có', 'Chỉ public', 'Giống class'],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'Kích thước struct bằng?',
    options: ['Tổng kích thước các trường', 'Lớn hơn tổng (padding)', 'Tùy thuộc', 'B và C đúng'],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'struct thích hợp cho?',
    options: [
      'Nhóm dữ liệu liên quan',
      'POD (Plain Old Data)',
      'Truyền dữ liệu',
      'Tất cả đều đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'POD struct là gì?',
    options: [
      'Plain Old Data',
      'Struct đơn giản',
      'Struct không có constructor',
      'Tất cả đều đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'Trivial struct là gì?',
    options: [
      'Struct đơn giản',
      'Struct không có constructor',
      'Struct không có destructor',
      'Tất cả đều đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'Standard layout struct là gì?',
    options: [
      'Struct có layout chuẩn',
      'Struct không có virtual',
      'Struct không có inheritance',
      'Tất cả đều đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có virtual function không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có virtual destructor không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có pure virtual function không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có abstract function không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có interface không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có template không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có specialization không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có partial specialization không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có explicit specialization không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có implicit specialization không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có instantiation không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có deduction không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có auto không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có decltype không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có constexpr không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có constinit không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có consteval không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có const không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có volatile không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có mutable không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có static không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có extern không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có register không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có thread_local không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có inline không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có virtual không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có explicit không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có friend không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có override không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'struct có thể có final không?',
    options: ['Không', 'Có', 'Tùy version C++', 'Chỉ C++ 11+'],
    answer: 1,
  },
]
