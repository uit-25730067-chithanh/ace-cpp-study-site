window.ACE_FLASHCARDS_DATA = [
  // === CHỦ ĐỀ: CÚ PHÁP & KHÁI NIỆM CƠ BẢN ===
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Hàm nào là điểm bắt đầu của mọi chương trình C++?',
    options: ['start()', 'main()', 'begin()', 'entry()'],
    answer: 1,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Ký tự nào dùng để kết thúc một câu lệnh trong C++?',
    options: ['.', ',', ':', ';'],
    answer: 3,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Lệnh `#include <iostream>` có chức năng gì?',
    options: [
      'Khai báo biến',
      'Thêm thư viện nhập/xuất vào chương trình',
      'Bắt đầu chương trình',
      'In ra màn hình',
    ],
    answer: 1,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Đâu là cách chú thích (comment) một dòng trong C++?',
    options: ['// Chú thích', '/* Chú thích */', '', '# Chú thích'],
    answer: 0,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Đâu là cách chú thích (comment) nhiều dòng trong C++?',
    options: ['// Chú thích', '/* Chú thích */', '', '## Chú thích'],
    answer: 1,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: '`using namespace std;` giúp ích gì?',
    options: [
      'Tăng tốc độ chương trình',
      'Giảm bộ nhớ sử dụng',
      'Không cần gõ `std::` trước `cout`, `cin`',
      'Bắt buộc phải có trong mọi chương trình',
    ],
    answer: 2,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Lệnh `return 0;` trong hàm `main` thường có ý nghĩa gì?',
    options: [
      'Chương trình bị lỗi',
      'Chương trình kết thúc mà không có lỗi',
      'Trả về giá trị 0 cho người dùng',
      'Chương trình lặp lại',
    ],
    answer: 1,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Trình biên dịch (Compiler) làm gì?',
    options: [
      'Chạy chương trình từng dòng một',
      'Dịch toàn bộ mã nguồn sang mã máy',
      'Tìm lỗi logic',
      'Quản lý bộ nhớ',
    ],
    answer: 1,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: '(Dựa trên Câu 1 - Đề thi mẫu) Ý tưởng tổng quát để giải bài toán `M + M*N` là gì?',
    options: [
      'Input là M, N và Output là tổng',
      'Input là M, N và Output là M + M*N',
      'Chỉ cần tính tích M*N',
      'Chỉ cần tính tổng M+N',
    ],
    answer: 1,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: '(Dựa trên Câu 1 - Đề thi mẫu) Thuật toán tổng quát để giải bài toán `M + M*N` bắt đầu bằng gì?',
    options: ['In kết quả', 'Khai báo biến', 'Nhập M và N', 'Tính toán'],
    answer: 2,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Một thuật toán cần có những đặc trưng nào?',
    options: [
      'Tính dừng, tính xác định, tính đúng đắn',
      'Input, Output',
      'Hiệu quả',
      'Tất cả các ý trên',
    ],
    answer: 3,
  },
  {
    topic: 'Cú pháp & Khái niệm cơ bản',
    text: 'Lưu đồ (flowchart) dùng để làm gì?',
    options: [
      'Viết mã nguồn chương trình',
      'Mô tả thuật toán một cách trực quan',
      'Biên dịch chương trình',
      'Kiểm thử chương trình',
    ],
    answer: 1,
  },

  // === CHỦ ĐỀ: BIẾN, KIỂU DỮ LIỆU & TOÁN TỬ ===
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Kiểu dữ liệu nào dùng để lưu trữ số nguyên?',
    options: ['float', 'double', 'char', 'int'],
    answer: 3,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Kiểu dữ liệu nào dùng để lưu trữ ký tự đơn?',
    options: ['string', 'int', 'char', 'boolean'],
    answer: 2,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Từ khóa nào dùng để khai báo một hằng số?',
    options: ['var', 'let', 'const', 'static'],
    answer: 2,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Toán tử `%` dùng để làm gì?',
    options: ['Chia lấy phần nguyên', 'Chia lấy phần dư', 'Luỹ thừa', 'Phần trăm'],
    answer: 1,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Kết quả của `7 / 2` trong C++ là bao nhiêu nếu cả hai đều là số nguyên?',
    options: ['3.5', '3', '4', '2'],
    answer: 1,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Để phép chia `7 / 2` cho kết quả là `3.5`, cần làm gì?',
    options: [
      'Không cần làm gì',
      'Ép kiểu một trong hai số thành số thực (vd: `(float)7 / 2`)',
      'Dùng hàm `divide()`',
      'Chỉ có thể làm với biến, không thể làm với hằng số',
    ],
    answer: 1,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Toán tử `++i` (prefix increment) khác `i++` (postfix increment) ở điểm nào?',
    options: [
      'Không khác nhau',
      '`++i` tăng giá trị của `i` trước rồi mới trả về giá trị mới',
      '`i++` trả về giá trị cũ của `i` rồi mới tăng giá trị lên',
      'Cả B và C đều đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Toán tử `&&` đại diện cho phép toán logic nào?',
    options: ['HOẶC (OR)', 'VÀ (AND)', 'PHỦ ĐỊNH (NOT)', 'SO SÁNH BẰNG'],
    answer: 1,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Toán tử so sánh "không bằng" trong C++ là gì?',
    options: ['<>', '=/=', '!=', '><'],
    answer: 2,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: '(Dựa trên Câu 7 - Đề thi mẫu) Trong `i / --j`, phép toán nào được thực hiện trước?',
    options: [
      'Phép chia `i / j`',
      'Phép giảm `--j`',
      'Cả hai thực hiện đồng thời',
      'Tùy trình biên dịch',
    ],
    answer: 1,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: '(Dựa trên Câu 7 - Đề thi mẫu) Khi `j=1`, giá trị của `j` sau khi thực hiện `--j` là bao nhiêu?',
    options: ['1', '0', '2', '-1'],
    answer: 1,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Khai báo `int &z = x;` có ý nghĩa gì?',
    options: [
      '`z` là con trỏ trỏ đến `x`',
      '`z` là một bản sao của `x`',
      '`z` là một tên gọi khác (tham chiếu) của `x`',
      'Lỗi cú pháp',
    ],
    answer: 2,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: '(Dựa trên Câu 5 - Đề thi mẫu) Sau `int &z=x;`, nếu thay đổi `z`, `x` có thay đổi không?',
    options: [
      'Có, `x` cũng thay đổi theo',
      'Không, `x` không thay đổi',
      'Chỉ thay đổi nếu `x` là con trỏ',
      'Phụ thuộc vào giá trị',
    ],
    answer: 0,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: '(Dựa trên Câu 5 - Đề thi mẫu) Kết quả của chương trình sau: `int x=10; int &z=x; z=x+10; cout<<x;`',
    options: ['10', '20', '0', 'Lỗi'],
    answer: 1,
  },
  {
    topic: 'Biến, Kiểu dữ liệu & Toán tử',
    text: 'Phép toán `S = -S * A[i];` tương đương với phép nào?',
    options: ['S = S * -A[i];', 'S = -(S * A[i]);', 'Cả A và B đều đúng', 'Cả A và B đều sai'],
    answer: 2,
  },

  // === CHỦ ĐỀ: ĐIỀU KIỆN & VÒNG LẶP ===
  {
    topic: 'Điều kiện & Vòng lặp',
    text: '(Dựa trên Câu 2 - Đề thi mẫu) Vòng lặp `for (int i=0; i<3; i++)` sẽ lặp với các giá trị `i` nào?',
    options: ['0, 1, 2, 3', '1, 2, 3', '0, 1, 2', '1, 2'],
    answer: 2,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: '(Dựa trên Câu 6 - Đề thi mẫu) Trong `switch`, nếu một `case` không có `break`, điều gì sẽ xảy ra?',
    options: [
      'Chương trình báo lỗi',
      'Chương trình thoát khỏi switch',
      'Chương trình sẽ thực hiện tiếp các lệnh ở case tiếp theo (fallthrough)',
      'Chỉ thực hiện case đó',
    ],
    answer: 2,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: '(Dựa trên Câu 6 - Đề thi mẫu) Cho `x=1, y=2`, `switch(x+y)` sẽ nhảy vào `case` nào?',
    options: ['case 1', 'case 2', 'case 3', 'default'],
    answer: 2,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Vòng lặp `while` kiểm tra điều kiện ở đâu?',
    options: [
      'Trước khi bắt đầu mỗi lần lặp',
      'Sau khi kết thúc mỗi lần lặp',
      'Chỉ một lần duy nhất lúc bắt đầu',
      'Không kiểm tra điều kiện',
    ],
    answer: 0,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Vòng lặp `do-while` kiểm tra điều kiện ở đâu?',
    options: [
      'Trước khi bắt đầu mỗi lần lặp',
      'Sau khi kết thúc mỗi lần lặp',
      'Chỉ một lần duy nhất lúc bắt đầu',
      'Không kiểm tra điều kiện',
    ],
    answer: 1,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Cấu trúc `if-else if-else` dùng để xử lý trường hợp nào?',
    options: [
      'Chỉ có 2 trường hợp',
      'Lặp lại một công việc',
      'Có nhiều hơn 2 trường hợp cần xét',
      'Chỉ xử lý lỗi',
    ],
    answer: 2,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: '(Dựa trên Câu 4 - Đề thi mẫu) `for(int i=0; i<4; i++)` lặp bao nhiêu lần?',
    options: ['3 lần', '4 lần', '5 lần', '0 lần'],
    answer: 1,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Lệnh `break` có thể được sử dụng trong cấu trúc nào?',
    options: [
      'Chỉ trong vòng lặp',
      'Chỉ trong `switch`',
      'Cả vòng lặp và `switch`',
      'Chỉ trong `if`',
    ],
    answer: 2,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Lệnh `continue` có thể được sử dụng trong cấu trúc nào?',
    options: [
      'Chỉ trong vòng lặp',
      'Chỉ trong `switch`',
      'Cả vòng lặp và `switch`',
      'Chỉ trong `if`',
    ],
    answer: 0,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Để lặp qua tất cả phần tử của mảng `a` có `n` phần tử, vòng lặp `for` nào là đúng nhất?',
    options: [
      '`for(i=1; i<n; i++)`',
      '`for(i=0; i<=n; i++)`',
      '`for(i=0; i<n; i++)`',
      '`for(i=1; i<=n; i++)`',
    ],
    answer: 2,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Điều kiện trong câu lệnh `if` phải là một biểu thức trả về giá trị gì?',
    options: ['Số nguyên', 'Số thực', 'Logic (đúng/sai, true/false)', 'Ký tự'],
    answer: 2,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Trong C++, giá trị số nguyên nào được coi là `false` trong một điều kiện logic?',
    options: ['-1', '1', 'Bất kỳ số nào khác 0', '0'],
    answer: 3,
  },
  {
    topic: 'Điều kiện & Vòng lặp',
    text: 'Vòng lặp vô hạn là gì?',
    options: [
      'Vòng lặp không bao giờ kết thúc',
      'Vòng lặp chạy 1000 lần',
      'Vòng lặp bị lỗi',
      'Vòng lặp không có thân',
    ],
    answer: 0,
  },

  // === CHỦ ĐỀ: HÀM & ĐỆ QUY ===
  {
    topic: 'Hàm & Đệ quy',
    text: '(Dựa trên Câu 3 - Đề thi mẫu) Khi gọi hàm `f(a, a)`, cả hai tham số `&a` và `&b` trong hàm `f` đều tham chiếu đến biến nào?',
    options: [
      'Biến `a` và biến `b` ở `main`',
      'Cả hai đều tham chiếu đến `a` ở `main`',
      'Cả hai đều tham chiếu đến `b` ở `main`',
      'Tạo ra 2 biến mới',
    ],
    answer: 1,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: '(Dựa trên Câu 10 - Đề thi mẫu) Tại sao khai báo `void Multiply(...)` bị lỗi khi có lệnh `return -1;`?',
    options: [
      'Vì hàm `void` không được `return`',
      'Vì hàm `void` không được trả về số âm',
      'Vì hàm `void` không được trả về bất kỳ giá trị nào',
      'Vì `return` phải ở cuối hàm',
    ],
    answer: 2,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: '(Dựa trên Câu 10 - Đề thi mẫu) Để hàm `Multiply` có thể trả về các giá trị -1, 1, 0, kiểu trả về của nó phải là gì?',
    options: ['void', 'float', 'bool', 'int'],
    answer: 3,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: '(Dựa trên Câu 10 - Đề thi mẫu) Tại sao khai báo tham số `int a` là sai khi muốn truyền vào một mảng?',
    options: [
      'Vì tên biến là `a`',
      'Vì phải khai báo là `int a[]` hoặc `int *a`',
      'Vì kiểu `int` không đúng',
      'Vì thiếu kích thước mảng',
    ],
    answer: 1,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: '(Dựa trên Câu 12 - Đề thi mẫu) Input và Output của một hàm dùng để làm gì?',
    options: [
      'Mô tả cách hàm hoạt động',
      'Xác định dữ liệu đầu vào và kết quả trả về của hàm',
      'Để trang trí cho code',
      'Chỉ dành cho hàm `main`',
    ],
    answer: 1,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: 'Đệ quy là gì?',
    options: [
      'Là một loại vòng lặp',
      'Là một hàm gọi một hàm khác',
      'Là một hàm tự gọi lại chính nó',
      'Là một kỹ thuật sắp xếp',
    ],
    answer: 2,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: 'Yếu tố quan trọng nhất để ngăn một hàm đệ quy chạy vô hạn là gì?',
    options: ['Vòng lặp `for`', 'Điều kiện dừng (base case)', 'Tham số con trỏ', 'Lệnh `break`'],
    answer: 1,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: 'Bài toán kinh điển nào thường được giải bằng đệ quy?',
    options: ['Tính tổng hai số', 'Tính giai thừa', 'Kiểm tra số chẵn lẻ', 'In chuỗi ra màn hình'],
    answer: 1,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: 'Truyền tham số theo giá trị (pass by value) có đặc điểm gì?',
    options: [
      'Hàm có thể thay đổi biến gốc',
      'Hàm chỉ nhận bản sao của biến, mọi thay đổi không ảnh hưởng bên ngoài',
      'Tốc độ nhanh hơn tham chiếu',
      'Bắt buộc với mọi hàm',
    ],
    answer: 1,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: 'Truyền tham số theo tham chiếu (pass by reference) dùng ký tự nào?',
    options: ['*', '&', '$', '%'],
    answer: 1,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: 'Khai báo hàm (prototype) là gì?',
    options: [
      'Một tên gọi khác của định nghĩa hàm',
      'Một lời chú thích về hàm',
      'Khai báo tên hàm, kiểu trả về và tham số mà không cần định nghĩa thân hàm',
      'Một tệp tin chứa các hàm',
    ],
    answer: 2,
  },
  {
    topic: 'Hàm & Đệ quy',
    text: 'Lợi ích của việc chia chương trình thành các hàm nhỏ là gì?',
    options: ['Tái sử dụng code', 'Dễ đọc và bảo trì', 'Dễ kiểm thử', 'Tất cả các ý trên'],
    answer: 3,
  },

  // === CHỦ ĐỀ: MẢNG & CHUỖI ===
  {
    topic: 'Mảng & Chuỗi',
    text: '(Dựa trên Câu 4 - Đề thi mẫu) `int A[5]={1,2,5,6};`. Phần tử `A[2]` có giá trị là bao nhiêu?',
    options: ['1', '2', '5', '6'],
    answer: 2,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: '(Dựa trên Câu 4 - Đề thi mẫu) `int A[5]={1,2,5,6};`. Phần tử `A[4]` có giá trị là bao nhiêu?',
    options: ['6', '0', 'Giá trị rác', 'Lỗi'],
    answer: 1,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Mảng trong C++ được đánh chỉ số bắt đầu từ đâu?',
    options: ['1', '0', '-1', 'Tùy người dùng định nghĩa'],
    answer: 1,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Chuỗi ký tự kiểu C (C-string) phải kết thúc bằng ký tự đặc biệt nào?',
    options: ["'\\n'", "'\\t'", "'\\0'", 'EOF'],
    answer: 2,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: "(Dựa trên Câu 11 - Đề thi mẫu) `char s1[] = {'C', 'h', 'a', 't'};`. `sizeof(s1)` là bao nhiêu?",
    options: ['3', '4', '5', 'Tùy máy'],
    answer: 1,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: '(Dựa trên Câu 11 - Đề thi mẫu) `char s2[] = "Chat";`. `sizeof(s2)` là bao nhiêu?',
    options: ['3', '4', '5', 'Tùy máy'],
    answer: 2,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Tại sao `sizeof("Chat")` lại là 5?',
    options: [
      'Vì có 5 ký tự',
      'Vì trình biên dịch làm tròn',
      "Vì nó bao gồm 4 ký tự và 1 ký tự kết thúc chuỗi '\\0'",
      'Vì kiểu `char` có kích thước 5 byte',
    ],
    answer: 2,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Hàm `strlen()` trong `<cstring>` dùng để làm gì?',
    options: [
      'So sánh 2 chuỗi',
      'Sao chép chuỗi',
      "Trả về độ dài chuỗi (không tính '\\0')",
      'Nối 2 chuỗi',
    ],
    answer: 2,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Để khai báo mảng 2 chiều có 3 hàng và 5 cột, cú pháp nào là đúng?',
    options: ['`int a[3, 5];`', '`int a(3, 5);`', '`int a[3][5];`', '`int[3][5] a;`'],
    answer: 2,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Truy cập phần tử ở hàng `i`, cột `j` của mảng `a`?',
    options: ['`a(i, j)`', '`a[i, j]`', '`a[i][j]`', '`a.get(i, j)`'],
    answer: 2,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Để duyệt hết các phần tử của một mảng 2 chiều, ta thường dùng bao nhiêu vòng lặp `for` lồng nhau?',
    options: ['1', '2', '3', 'Tùy kích thước mảng'],
    answer: 1,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: '(STL) Để sử dụng kiểu `std::string`, bạn cần `#include` header nào?',
    options: ['<iostream>', '<string.h>', '<cstring>', '<string>'],
    answer: 3,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Ưu điểm của `std::string` so với chuỗi C-style là gì?',
    options: [
      'Tự động quản lý bộ nhớ',
      'Hỗ trợ nhiều hàm tiện ích',
      'An toàn hơn, tránh lỗi tràn bộ đệm',
      'Tất cả các ý trên',
    ],
    answer: 3,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Lỗi "buffer overflow" (tràn bộ đệm) thường xảy ra khi nào với chuỗi C-style?',
    options: [
      'Khi chuỗi quá ngắn',
      'Khi sao chép một chuỗi dài hơn vào một mảng không đủ lớn',
      'Khi chuỗi rỗng',
      'Khi so sánh 2 chuỗi',
    ],
    answer: 1,
  },
  {
    topic: 'Mảng & Chuỗi',
    text: 'Hàm `strcmp()` trả về 0 khi nào?',
    options: [
      'Chuỗi 1 lớn hơn chuỗi 2',
      'Chuỗi 1 nhỏ hơn chuỗi 2',
      'Hai chuỗi giống hệt nhau',
      'Hai chuỗi khác nhau',
    ],
    answer: 2,
  },

  // === CHỦ ĐỀ: CON TRỎ & CẤP PHÁT ĐỘNG ===
  {
    topic: 'Con trỏ & Cấp phát động',
    text: '(Dựa trên Câu 13 - Đề thi mẫu) Toán tử `&` (khi đứng trước tên biến) có tác dụng gì?',
    options: [
      'Lấy giá trị của biến',
      'Lấy địa chỉ của biến',
      'Khai báo tham chiếu',
      'Phép toán AND',
    ],
    answer: 1,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: '(Dựa trên Câu 13 - Đề thi mẫu) Toán tử `*` (khi đứng trước tên con trỏ) có tác dụng gì?',
    options: [
      'Khai báo con trỏ',
      'Phép nhân',
      'Lấy giá trị tại địa chỉ mà con trỏ đang trỏ tới',
      'Lấy địa chỉ của con trỏ',
    ],
    answer: 2,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: 'Một biến con trỏ lưu trữ cái gì?',
    options: [
      'Một giá trị số nguyên',
      'Một địa chỉ ô nhớ',
      'Một ký tự',
      'Một bản sao của biến khác',
    ],
    answer: 1,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: '(Dựa trên Câu 8 - Đề thi mẫu) Lệnh `int *a = new int[n];` có ý nghĩa gì?',
    options: [
      'Khai báo mảng tĩnh `a` có `n` phần tử',
      'Cấp phát động một vùng nhớ cho `n` số nguyên và cho con trỏ `a` trỏ tới',
      'Gán `n` cho con trỏ `a`',
      'Lỗi cú pháp',
    ],
    answer: 1,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: 'Để giải phóng vùng nhớ được cấp phát bởi `new int[n]`, ta phải dùng lệnh nào?',
    options: ['`delete n;`', '`delete a;`', '`free(a);`', '`delete[] a;`'],
    answer: 3,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: '(Dựa trên Câu 8 - Đề thi mẫu) `*(p+i)` tương đương với cách viết nào sau đây?',
    options: ['`p[i]`', '`a[i]`', 'Cả A và B đều đúng', 'Cả A và B đều sai'],
    answer: 2,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: '(Dựa trên Câu 13 - Đề thi mẫu) Cho `int *p = &x;`, giá trị của `p` là gì?',
    options: ['Giá trị của `x`', 'Địa chỉ của `x`', 'Địa chỉ của `p`', 'Giá trị rác'],
    answer: 1,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: '(Dựa trên Câu 14a - Đề thi mẫu) Sau `*ptr = 50;`, tại sao biến `n` cũng thay đổi giá trị?',
    options: [
      'Vì `n` và `ptr` là 2 tên khác nhau của cùng 1 biến',
      'Vì `ptr` trỏ tới địa chỉ của `n`, nên thay đổi `*ptr` cũng là thay đổi giá trị tại địa chỉ đó',
      'Đây là tính năng của C++',
      'Do lỗi của trình biên dịch',
    ],
    answer: 1,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: 'Con trỏ `NULL` hoặc `nullptr` có ý nghĩa gì?',
    options: [
      'Con trỏ bị lỗi',
      'Con trỏ trỏ đến địa chỉ 0',
      'Con trỏ không trỏ đến một vùng nhớ hợp lệ nào cả',
      'B và C đều đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: 'Tại sao cần phải giải phóng bộ nhớ sau khi cấp phát động?',
    options: [
      'Để chương trình chạy nhanh hơn',
      'Để tránh lỗi rò rỉ bộ nhớ (memory leak)',
      'Để hệ điều hành có thể sử dụng lại vùng nhớ đó',
      'Cả B và C đều đúng',
    ],
    answer: 3,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: 'Cách viết `p->x` là viết tắt cho cách viết nào?',
    options: ['`*p.x`', '`&p.x`', '`(*p).x`', '`p.x`'],
    answer: 2,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: 'Con trỏ hằng (`const int *p`) khác gì con trỏ tới hằng (`int * const p`)?',
    options: [
      'Không khác nhau',
      'Con trỏ hằng không thể thay đổi địa chỉ nó trỏ tới; con trỏ tới hằng không thể thay đổi giá trị vùng nhớ',
      'Con trỏ hằng không thể thay đổi giá trị vùng nhớ; con trỏ tới hằng không thể thay đổi địa chỉ nó trỏ tới',
      'Cả hai đều không thể thay đổi gì',
    ],
    answer: 2,
  },
  {
    topic: 'Con trỏ & Cấp phát động',
    text: 'Mảng và con trỏ có mối liên hệ như thế nào trong C++?',
    options: [
      'Chúng hoàn toàn khác nhau',
      'Tên của một mảng có thể được xem như một con trỏ hằng trỏ đến phần tử đầu tiên của mảng',
      'Mọi con trỏ đều là mảng',
      'Không có mối liên hệ',
    ],
    answer: 1,
  },

  // === CHỦ ĐỀ: STRUCT ===
  {
    topic: 'Struct',
    text: '(Dựa trên Câu 9 - Đề thi mẫu) Cú pháp `struct Point2D { int x, y; };` dùng để làm gì?',
    options: [
      'Khai báo một biến struct',
      'Định nghĩa một kiểu dữ liệu cấu trúc mới tên là `Point2D`',
      'Cấp phát bộ nhớ cho một struct',
      'Tạo một hàm struct',
    ],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: '(Dựa trên Câu 9 - Đề thi mẫu) `struct Point2D p1 = {2022, 2023};` có ý nghĩa gì?',
    options: [
      'So sánh p1 với 2022 và 2023',
      'Gọi hàm p1',
      'Khai báo biến `p1` kiểu `Point2D` và khởi tạo `p1.x=2022`, `p1.y=2023`',
      'Lỗi cú pháp',
    ],
    answer: 2,
  },
  {
    topic: 'Struct',
    text: 'Để truy cập thành viên `x` của biến struct `p1`, ta dùng cú pháp nào?',
    options: ['`p1->x`', '`p1.x`', '`p1::x`', '`p1[x]`'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'Để truy cập thành viên `x` thông qua con trỏ struct `p2`, ta dùng cú pháp nào?',
    options: ['`p2.x`', '`(*p2).x`', '`p2->x`', 'Cả B và C đều đúng'],
    answer: 3,
  },
  {
    topic: 'Struct',
    text: '(Dựa trên Câu 9 - Đề thi mẫu) Sau `p2->y = 7;`, giá trị của `p1.y` là bao nhiêu?',
    options: ['Vẫn là 2023', 'Là 7', 'Không xác định', 'Báo lỗi'],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'Tại sao sau `p2->y = 7;` thì `p1.y` cũng thay đổi?',
    options: [
      'Vì chúng có cùng tên',
      'Vì `p2` là con trỏ trỏ đến địa chỉ của `p1`',
      'Đây là một trường hợp đặc biệt',
      'Do lỗi chương trình',
    ],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'Sự khác biệt chính về quyền truy cập mặc định giữa `struct` và `class` là gì?',
    options: [
      'Không có gì khác biệt',
      'Thành viên `struct` mặc định là `private`, `class` là `public`',
      'Thành viên `struct` mặc định là `public`, `class` là `private`',
      '`struct` không thể có hàm',
    ],
    answer: 2,
  },
  {
    topic: 'Struct',
    text: 'Có thể khai báo một mảng các struct không? (Ví dụ: `Point2D danhSach[100];`)',
    options: [
      'Không thể',
      'Có thể, đây là cách phổ biến để quản lý danh sách đối tượng',
      'Chỉ có thể nếu struct không có con trỏ',
      'Chỉ có thể trong C++11 trở lên',
    ],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'Khi truyền một biến struct vào hàm theo giá trị (pass by value), điều gì xảy ra?',
    options: [
      'Hàm nhận địa chỉ của struct',
      'Toàn bộ struct được sao chép vào một biến cục bộ của hàm',
      'Hàm có thể thay đổi struct gốc',
      'Chỉ thành viên đầu tiên được sao chép',
    ],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'Để tối ưu hiệu suất, khi nào nên truyền struct vào hàm bằng tham chiếu hoặc con trỏ?',
    options: [
      'Không bao giờ',
      'Chỉ khi struct có nhiều thành viên là số thực',
      'Khi struct có kích thước lớn, để tránh việc sao chép tốn kém',
      'Chỉ khi hàm có kiểu trả về là `void`',
    ],
    answer: 2,
  },
  {
    topic: 'Struct',
    text: 'Một `struct` có thể chứa một `struct` khác làm thành viên không?',
    options: [
      'Không, C++ không cho phép',
      'Có, đây được gọi là cấu trúc lồng nhau (nested struct)',
      'Chỉ được phép lồng 1 cấp',
      'Chỉ được khi dùng `class`',
    ],
    answer: 1,
  },
  {
    topic: 'Struct',
    text: 'Một `struct` trong C++ có thể có các hàm thành viên (methods) không?',
    options: [
      'Không, chỉ `class` mới có',
      'Có, `struct` trong C++ có thể có cả hàm thành viên và hàm tạo',
      'Chỉ có thể có hàm tạo (constructor)',
      'Chỉ có thể có hàm hủy (destructor)',
    ],
    answer: 1,
  },
]
